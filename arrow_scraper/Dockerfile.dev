# Development ArrowTuner API Backend Dockerfile
# Uses production schema but with development features
FROM python:3.9-slim

# Set environment variables for development
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV FLASK_APP=api.py
ENV FLASK_ENV=development
ENV FLASK_DEBUG=1

# Set work directory
WORKDIR /app

# Install system dependencies including development tools
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        curl \
        wget \
        build-essential \
        sqlite3 \
        jq \
        tree \
        vim \
        git \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code (will be overridden by volume mount in development)
COPY . .

# Create necessary directories with proper permissions
RUN mkdir -p /app/data/processed /app/data/raw /app/logs /app/user_data /app/arrow_data /app/backups /app/databases

# Make scripts executable
RUN chmod +x /app/api.py \
    /app/start-api-robust.sh \
    /app/verify-databases.py \
    /app/run_migrations.py 2>/dev/null || true

# Create non-root user for development
RUN addgroup --gid 1000 devgroup && \
    adduser --disabled-password --gecos '' --uid 1000 --gid 1000 devuser

# Set up directory permissions for development
RUN chown -R devuser:devgroup /app && \
    chmod -R 755 /app/logs /app/user_data /app/data /app/arrow_data /app/backups /app/databases

# Switch to non-root user
USER devuser

# Health check for development
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:5000/api/simple-health || exit 1

# Expose port
EXPOSE 5000

# Development startup command (with hot reload capabilities)
CMD ["/app/start-api-robust.sh"]