# Fresh Docker Compose - Completely new configuration to avoid ContainerConfig errors
# Uses different container names and simplified configuration

version: '3.8'

services:
  # Flask API Backend - Fresh Configuration
  archery-api:
    build: 
      context: ./arrow_scraper
      dockerfile: Dockerfile
    container_name: fresh-archery-api
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      FLASK_ENV: production
      SECRET_KEY: ${SECRET_KEY:-change-this-secret-key-in-production}
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY:-not-set}
      NUXT_PUBLIC_GOOGLE_CLIENT_ID: ${NUXT_PUBLIC_GOOGLE_CLIENT_ID:-not-set}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-not-set}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI:-http://localhost}
    volumes:
      - fresh-userdata:/app/user_data
      - fresh-logs:/app/logs
    networks:
      - fresh-network

  # Nuxt 3 Frontend - Fresh Configuration  
  archery-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fresh-archery-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NUXT_PUBLIC_API_BASE: http://localhost:5000
      NUXT_PUBLIC_GOOGLE_CLIENT_ID: ${NUXT_PUBLIC_GOOGLE_CLIENT_ID:-not-set}
    depends_on:
      - archery-api
    networks:
      - fresh-network

  # Nginx Reverse Proxy - Fresh Configuration
  archery-nginx:
    image: nginx:alpine
    container_name: fresh-archery-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx/nginx.http-only.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - archery-api
      - archery-frontend
    networks:
      - fresh-network

volumes:
  fresh-userdata:
  fresh-logs:

networks:
  fresh-network: