{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(chmod:*)",
      "Bash(python test:*)",
      "Bash(python:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(playwright install)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(timeout 600 python run_comprehensive_extraction.py)",
      "Bash(timeout:*)",
      "Bash(rm:*)",
      "WebFetch(domain:victoryarchery.com)",
      "WebFetch(domain:www.victoryarchery.com)",
      "WebFetch(domain:issuu.com)",
      "Bash(export FLASK_APP=webapp.py)",
      "Bash(export FLASK_ENV=development)",
      "Bash(pkill:*)",
      "Bash(npm install:*)",
      "Bash(npm run build:*)",
      "Bash(npm run preview:*)",
      "Bash(./scripts/start-dual-architecture.sh:*)",
      "Bash(ls:*)",
      "Bash(curl:*)",
      "Bash(NODE_ENV=development ./scripts/start-dual-architecture.sh start)",
      "Bash(cat:*)",
      "Bash(sqlite3:*)",
      "Bash(true)",
      "Bash(cp:*)",
      "Bash(kill:*)",
      "Bash(wget:*)",
      "Bash(git add:*)",
      "Bash(git rebase:*)",
      "Bash(git checkout:*)",
      "Bash(git tag:*)",
      "Bash(./prepare-docker-data.sh:*)",
      "Bash(docker-compose:*)",
      "Bash(docker compose:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(docker:*)",
      "Bash(sudo systemctl status:*)",
      "Bash(./debug-database.sh:*)",
      "Bash(./test-simple-deployment.sh:*)",
      "Bash(mv:*)",
      "Bash(./diagnose-domain-access.sh:*)",
      "Bash(./fix-domain-access.sh:*)",
      "Bash(convert:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run postinstall:*)",
      "Bash(./start-dual-architecture.sh:*)",
      "Bash(echo $VIRTUAL_ENV)",
      "Bash(ping:*)",
      "Bash(git rm:*)",
      "WebFetch(domain:tophatarchery.com)",
      "Bash(npm run dev:*)",
      "Bash(scripts/start-dual-architecture.sh:*)",
      "Bash(gh project list:*)",
      "Bash(gh auth:*)",
      "Bash(gh issue:*)",
      "Bash(npm:*)",
      "Bash(echo:*)",
      "Bash(git config:*)",
      "Bash(pgrep:*)",
      "Bash(./docker-deploy.sh:*)",
      "Bash(sed:*)",
      "WebFetch(domain:github.com)",
      "Bash(NODE_ENV=development ./scripts/start-dual-architecture.sh restart)",
      "Bash(node:*)",
      "Bash(ln:*)"
    ],
    "deny": []
  }
}