services:
  # Flask API Backend
  api:
    build: 
      context: ./arrow_scraper
      dockerfile: Dockerfile
    container_name: arrowtuner-api
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
    # Database is built into the image, no volume mounting needed
    # volumes:
    #   - ./arrow_scraper:/app  # Uncomment for development
    networks:
      - arrowtuner-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nuxt 3 Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: arrowtuner-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NUXT_PUBLIC_API_BASE=http://api:5000/api
    depends_on:
      - api
    networks:
      - arrowtuner-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: arrowtuner-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/sites/:/etc/nginx/conf.d/:ro
      - ./deploy/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - api
      - frontend
    networks:
      - arrowtuner-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  nginx-logs:
    driver: local

networks:
  arrowtuner-network:
    driver: bridge