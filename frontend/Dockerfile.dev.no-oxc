# Development Frontend Dockerfile - Alternative approach to avoid oxc-parser issues
FROM node:18-bullseye-slim

# Set work directory
WORKDIR /app

# Install system dependencies including build tools for native bindings
RUN apt-get update && apt-get install -y \
    curl \
    git \
    vim \
    python3 \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy package files
COPY package*.json ./

# Try to install without optional dependencies that might cause native binding issues
RUN npm cache clean --force && \
    rm -rf node_modules package-lock.json && \
    npm install --verbose --no-optional

# If that fails, try installing without preparing (skip nuxt prepare)
RUN npm pkg set scripts.postinstall="echo 'Skipping nuxt prepare to avoid oxc-parser'"

# Copy application code (will be overridden by volume mount)
COPY . .

# Try running nuxt prepare manually after copy (might work with source code)
RUN npm run prepare 2>/dev/null || echo "Nuxt prepare failed, will try at runtime"

# Create non-root user
RUN addgroup --gid 1000 appgroup && \
    adduser --disabled-password --gecos '' --uid 1000 --gid 1000 appuser

# Set ownership
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/ || exit 1

# Expose ports
EXPOSE 3000
EXPOSE 24678

# Development startup with fallback if prepare fails
CMD ["sh", "-c", "npm run prepare || echo 'Prepare failed, continuing...'; npm run dev -- --host 0.0.0.0"]