# Minimal Docker Compose - Fast, reliable deployment
# Removes all complex verification steps and deploy configurations

version: '3.8'

services:
  # Flask API Backend - Minimal Configuration
  api:
    build: 
      context: ./arrow_scraper
      dockerfile: Dockerfile  # Use standard Dockerfile, not enhanced
    container_name: archerytools-api-minimal
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY:-not-set}
      - NUXT_PUBLIC_GOOGLE_CLIENT_ID=${NUXT_PUBLIC_GOOGLE_CLIENT_ID:-not-set}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-not-set}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI:-http://localhost}
    volumes:
      - archerytools-userdata:/app/user_data
      - archerytools-logs:/app/logs
    networks:
      - archerytools-network

  # Nuxt 3 Frontend - Minimal Configuration
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile  # Use standard Dockerfile, not enhanced
    container_name: archerytools-frontend-minimal
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NUXT_PUBLIC_API_BASE=http://localhost:5000
      - NUXT_PUBLIC_GOOGLE_CLIENT_ID=${NUXT_PUBLIC_GOOGLE_CLIENT_ID:-not-set}
    depends_on:
      - api
    networks:
      - archerytools-network

  # Nginx Reverse Proxy - Simple HTTP Only
  nginx:
    image: nginx:alpine
    container_name: archerytools-nginx-minimal
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx/nginx.http-only.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
      - frontend
    networks:
      - archerytools-network

volumes:
  archerytools-userdata:
    driver: local
  archerytools-logs:
    driver: local

networks:
  archerytools-network:
    driver: bridge