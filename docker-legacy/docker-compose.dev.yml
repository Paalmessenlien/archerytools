# Docker Compose for Development (without nginx)
# Use this for simple development setup
# Run with: docker-compose -f docker-compose.dev.yml up

version: '3.8'

services:
  # Flask API Backend
  api:
    build: 
      context: ./arrow_scraper
      dockerfile: Dockerfile
    container_name: arrowtuner-api-dev
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=True
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
    volumes:
      - ./arrow_scraper:/app
      - arrowtuner-data:/app/data
    networks:
      - arrowtuner-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nuxt 3 Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: arrowtuner-frontend-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - API_BASE_URL=http://localhost:5000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.nuxt
    depends_on:
      - api
    networks:
      - arrowtuner-network
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  arrowtuner-data:
    driver: local

networks:
  arrowtuner-network:
    driver: bridge