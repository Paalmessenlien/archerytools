# Fixed Docker Compose - Simplified configuration to avoid ContainerConfig errors
# This version removes problematic deploy sections and complex volume configurations

version: '3.8'

services:
  # Flask API Backend
  api:
    build: 
      context: ./arrow_scraper
      dockerfile: Dockerfile.enhanced
    container_name: archerytools-api
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY:-not-set}
      - NUXT_PUBLIC_GOOGLE_CLIENT_ID=${NUXT_PUBLIC_GOOGLE_CLIENT_ID:-not-set}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-not-set}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI:-https://localhost}
      - DATABASE_VERIFICATION=enabled
    volumes:
      - archerytools-userdata:/app/user_data
      - archerytools-logs:/app/logs
    networks:
      - archerytools-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/api/simple-health || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s

  # Nuxt 3 Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.enhanced
      args:
        - NODE_ENV=production
    container_name: archerytools-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NUXT_PUBLIC_API_BASE=http://localhost:5000
      - NUXT_PUBLIC_GOOGLE_CLIENT_ID=${NUXT_PUBLIC_GOOGLE_CLIENT_ID:-not-set}
    depends_on:
      - api
    networks:
      - archerytools-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/ || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 120s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: archerytools-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx/nginx.http-only.conf:/etc/nginx/nginx.conf:ro
      - archerytools-logs:/var/log/nginx
    depends_on:
      - api
      - frontend
    networks:
      - archerytools-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s

volumes:
  archerytools-userdata:
    driver: local
  archerytools-logs:
    driver: local

networks:
  archerytools-network:
    driver: bridge